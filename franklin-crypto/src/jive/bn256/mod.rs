use bellman::pairing::bn256::Bn256;
use bellman::pairing::ff::{Field, PrimeField, PrimeFieldRepr};
use super::{JiveEngine, JiveParams};
use group_hash::{GroupHasher, BlakeHasher};

extern crate num_bigint;
extern crate num_integer;
extern crate num_traits;
use self::num_bigint::{BigUint, BigInt};
use self::num_integer::{Integer, ExtendedGcd};
use self::num_traits::{ToPrimitive, Zero, One};

#[derive(Clone)]
pub struct Bn256JiveParams {
    should_use_custom_gate: bool
}

impl Bn256JiveParams {
    pub fn new(should_use_custom_gate: bool) -> Self {
        Self { should_use_custom_gate }
    }
}

impl JiveParams for Bn256JiveParams {
    fn set_allow_custom_gate(&mut self, allow: bool) {
        self.should_use_custom_gate = allow
    }

    fn use_custom_gate(&self) -> bool {
        self.should_use_custom_gate
    }
}

impl JiveEngine for Bn256 {
    type Params = Bn256JiveParams;

    const ROUNDS: usize = 19;
    const ROUND_CONSTANTS_C: &'static [&'static str] = &[
        "37",
        "13352247125433170118601974521234241686699252132838635793584252509352796067497",
        "8959866518978803666083663798535154543742217570455117599799616562379347639707",
        "3222831896788299315979047232033900743869692917288857580060845801753443388885",
        "11437915391085696126542499325791687418764799800375359697173212755436799377493",
        "14725846076402186085242174266911981167870784841637418717042290211288365715997",
        "3625896738440557179745980526949999799504652863693655156640745358188128872126",
        "463291105983501380924034618222275689104775247665779333141206049632645736639",
        "17443852951621246980363565040958781632244400021738903729528591709655537559937",
        "10761214205488034344706216213805155745482379858424137060372633423069634639664",
        "1555059412520168878870894914371762771431462665764010129192912372490340449901",
        "7985258549919592662769781896447490440621354347569971700598437766156081995625",
        "9570976950823929161626934660575939683401710897903342799921775980893943353035",
        "17962366505931708682321542383646032762931774796150042922562707170594807376009",
        "12386136552538719544323156650508108618627836659179619225468319506857645902649",
        "21184636178578575123799189548464293431630680704815247777768147599366857217074",
        "3021529450787050964585040537124323203563336821758666690160233275817988779052",
        "7005374570978576078843482270548485551486006385990713926354381743200520456088",
        "3870834761329466217812893622834770840278912371521351591476987639109753753261",
        "0",
    ];

    const ROUND_CONSTANTS_D: &'static [&'static str] = &[
        "8755297148735710088898562298102910035419345760166413737479281674630323398284",
        "5240474505904316858775051800099222288270827863409873986701694203345984265770",
        "9012679925958717565787111885188464538194947839997341443807348023221726055342",
        "21855834035835287540286238525800162342051591799629360593177152465113152235615",
        "11227229470941648605622822052481187204980748641142847464327016901091886692935",
        "8277823808153992786803029269162651355418392229624501612473854822154276610437",
        "20904607884889140694334069064199005451741168419308859136555043894134683701950",
        "1902748146936068574869616392736208205391158973416079524055965306829204527070",
        "14452570815461138929654743535323908350592751448372202277464697056225242868484",
        "10548134661912479705005015677785100436776982856523954428067830720054853946467",
        "17068729307795998980462158858164249718900656779672000551618940554342475266265",
        "16199718037005378969178070485166950928725365516399196926532630556982133691321",
        "19148564379197615165212957504107910110246052442686857059768087896511716255278",
        "5497141763311860520411283868772341077137612389285480008601414949457218086902",
        "18379046272821041930426853913114663808750865563081998867954732461233335541378",
        "7696001730141875853127759241422464241772355903155684178131833937483164915734",
        "963844642109550260189938374814031216012862679737123536423540607519656220143",
        "12412434690468911461310698766576920805270445399824272791985598210955534611003",
        "6971318955459107915662273112161635903624047034354567202210253298398705502050",
        "0",
    ];

    const DELTA: &'static str = "8755297148735710088898562298102910035419345760166413737479281674630323398247";

    const ALPHA_INV: &'static str = "17510594297471420177797124596205820070838691520332827474958563349260646796493";
}